global
    # global settings here
    tune.ssl.default-dh-param 2048
    ssl-server-verify none
    tune.maxrewrite 4096
	stats socket /var/run/haproxy.sock mode 600 level admin

defaults
    # defaults here
    mode                    tcp
    log                     global
    option                  httplog
    option                  dontlognull
    timeout http-request    1m
    timeout queue           1m
    timeout connect         1m
    timeout client          15m
    timeout server          15m
    timeout http-keep-alive 1m
    timeout check           1m

resolvers mydns
    nameserver dns1 10.96.0.10:53
    accepted_payload_size 8192

frontend stats
    bind *:8404
    mode http
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if LOCALHOST

listen streaming_http
	bind *:20080
	balance leastconn
	mode tcp
	server-template srv 10 <Headless service FQDN of ST edge>:20080 resolvers mydns init-addr none #<service-name>.<namespace>.svc.cluster.local

listen streaming_ftp
    bind *:20021
    balance leastconn
    mode tcp
    server-template srv 10 <Headless service FQDN of ST edge>:20021 resolvers mydns init-addr none #<service-name>.<namespace>.svc.cluster.local

listen streaming_ssh
    bind *:20022
    balance leastconn
    mode tcp
    server-template srv 10 <Headless service FQDN of ST edge>:20022 resolvers mydns init-addr none #<service-name>.<namespace>.svc.cluster.local

listen streaming_as2
    bind *:21080
    balance leastconn
    mode tcp
    server-template srv 10 <Headless service FQDN of ST edge>:21080 resolvers mydns init-addr none #<service-name>.<namespace>.svc.cluster.local

listen streaming_admin
    bind *:20444
    balance leastconn
    mode tcp
    server-template srv 10 <Headless service FQDN of ST edge>:20444 resolvers mydns init-addr none #<service-name>.<namespace>.svc.cluster.local

listen streaming_pesit
    bind *:27617
    balance leastconn
    mode tcp
    server-template srv 10 <Headless service FQDN of ST edge>:27617 resolvers mydns init-addr none #<service-name>.<namespace>.svc.cluster.local
